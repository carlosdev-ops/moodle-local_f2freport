{{! templates/filters.mustache }}

<div class="f2f-filters">
  {{!-- Single responsive layout with CSS-based responsive behavior --}}
  <div class="filters-container">
    {{!-- Row 1: Course and Future checkbox --}}
    <div class="filters-row-1">
      <div class="filter-course">
        <label for="coursetext" class="form-label">{{#str}}filter_course, local_f2freport{{/str}}</label>
        <textarea id="coursetext" name="coursetext" class="form-control" rows="2"
                  placeholder="{{#str}}searchcoursesmulti, local_f2freport{{/str}}"
                  title="{{#str}}filter_course, local_f2freport{{/str}}">{{coursetext}}</textarea>
        <small class="form-text text-muted">
          {{#str}}coursefilterhelp, local_f2freport{{/str}}
        </small>
      </div>

      <div class="filter-dates">
        <div class="filter-date-from">
          <label for="datefrom" class="form-label">{{#str}}filter_startdate, local_f2freport{{/str}}</label>
          <input id="datefrom" name="datefrom" type="date" class="form-control" value="{{datefrom}}"
                 title="{{#str}}filter_startdate, local_f2freport{{/str}}">
        </div>

        <div class="filter-date-to">
          <label for="dateto" class="form-label">{{#str}}filter_enddate, local_f2freport{{/str}}</label>
          <input id="dateto" name="dateto" type="date" class="form-control" value="{{dateto}}"
                 title="{{#str}}filter_enddate, local_f2freport{{/str}}">
        </div>
      </div>

      <div class="filter-future">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" id="futureonly" name="futureonly" {{#futureonly}}checked{{/futureonly}}>
          <label class="form-check-label" for="futureonly">
            {{#str}}filter_upcoming, local_f2freport{{/str}}
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="checkbox" id="includewaitlist" name="includewaitlist" {{#includewaitlist}}checked{{/includewaitlist}}>
          <label class="form-check-label" for="includewaitlist">
            {{#str}}includewaitlist, local_f2freport{{/str}}
          </label>
        </div>
      </div>

      <div class="filter-actions">
        <button type="submit" class="btn btn-primary">
          <i class="fa fa-search" aria-hidden="true"></i>
          <span class="btn-text">{{#str}}filter, local_f2freport{{/str}}</span>
        </button>
        <button type="button" id="f2f-reset" class="btn btn-outline-secondary">
          <i class="fa fa-refresh" aria-hidden="true"></i>
          <span class="btn-text-reset">{{#str}}reset, local_f2freport{{/str}}</span>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
(function(){
  // Find the nearest form (works whether the template wraps a form or is inside one)
  const root = document.currentScript.previousElementSibling;
  let form = root && root.closest('form');
  if (!form) form = document.querySelector('form.f2f-filter-form');
  if (!form) return;

  const ids = ['coursetext','datefrom','dateto','futureonly','includewaitlist'];
  let timer;
  const submitDebounced = () => {
    clearTimeout(timer);
    timer = setTimeout(() => form.submit(), 400);
  };

  ids.forEach(id => {
    const el = document.getElementById(id);
    if (!el) return;
    if (id === 'coursetext') {
      el.addEventListener('keydown', (e) => {
        if (e.key === 'Enter') {
          e.preventDefault();
          form.submit();
        }
      });
    } else {
      el.addEventListener('change', submitDebounced);
    }
  });

  // If "upcoming only" is checked and no start date, prefill with today
  const upcoming = document.getElementById('futureonly');
  if (upcoming) {
    upcoming.addEventListener('change', () => {
      if (upcoming.checked) {
        const sd = document.getElementById('datefrom');
        if (sd && !sd.value) {
          const d = new Date();
          const m = String(d.getMonth() + 1).padStart(2, '0');
          const day = String(d.getDate()).padStart(2, '0');
          sd.value = `${d.getFullYear()}-${m}-${day}`;
        }
      }
    });
  }

  // Reset button clears all fields and submits
  const resetBtn = document.getElementById('f2f-reset');
  if (resetBtn) {
    resetBtn.addEventListener('click', () => {
      const course = document.getElementById('coursetext');
      const sd = document.getElementById('datefrom');
      const ed = document.getElementById('dateto');
      const up = document.getElementById('futureonly');
      const waitlist = document.getElementById('includewaitlist');

      if (course) course.value = '';
      if (sd) sd.value = '';
      if (ed) ed.value = '';
      if (up) up.checked = false;
      if (waitlist) waitlist.checked = false;

      form.submit();
    });
  }
})();
</script>
